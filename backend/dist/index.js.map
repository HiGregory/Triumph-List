{"version":3,"sources":["../src/index.js"],"names":["dotenv","config","LocalStrategy","require","Strategy","app","server","http","createServer","use","bodyParser","json","limit","bodyLimit","passport","initialize","Account","usernameField","passwordField","authenticate","serializeUser","deserializeUser","routes","get","req","res","message","listen","port","console","log","address","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAIA;;;;AACA;;;;AACA;;AAOA;;;;AACA;;;;;;AAZAA,iBAAOC,MAAP;;AAMA,IAAMC,gBAAiBC,QAAQ,gBAAR,EAA0BC,QAAjD;AACA;AACA;;;AAMA,IAAIC,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEA;AACA;AACAA,IAAII,GAAJ,CAAQC,qBAAWC,IAAX,CAAgB;AACtBC,SAAOX,iBAAOY;AADQ,CAAhB,CAAR;;AAIA;AACAR,IAAII,GAAJ,CAAQK,mBAASC,UAAT,EAAR;AACA,IAAIC,UAAUb,QAAQ,iBAAR,CAAd;AACAW,mBAASL,GAAT,CAAa,IAAIP,aAAJ,CAAkB;AAC7Be,iBAAe,OADc;AAE7BC,iBAAe;AAFc,CAAlB,EAIXF,QAAQG,YAAR,EAJW,CAAb;;AAQAL,mBAASM,aAAT,CAAuBJ,QAAQI,aAAR,EAAvB;AACAN,mBAASO,eAAT,CAAyBL,QAAQK,eAAR,EAAzB;;AAEA;AACAhB,IAAII,GAAJ,CAAQ,KAAR,EAAea,gBAAf;;AAEA;AACAjB,IAAIkB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAId,IAAJ,CAAS,EAAEe,SAAS,uBAAX,EAAT;AACD,CAFD;;AAIArB,IAAIC,MAAJ,CAAWqB,MAAX,CAAkB1B,iBAAO2B,IAAzB;AACAC,QAAQC,GAAR,sBAA+BzB,IAAIC,MAAJ,CAAWyB,OAAX,GAAqBH,IAApD;;AAEAI,OAAOC,OAAP,GAAiB;AACf5B;AADe,CAAjB","file":"index.js","sourcesContent":["import dotenv from 'dotenv';\nimport http from 'http';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\n\ndotenv.config();\n\nimport UserDataExt from './controller/extensions/userData-ext';\nimport User from './model/user';\nimport { generateAccessToken, respond, authenticate } from './middleware/authMiddleware'\n\nconst LocalStrategy  = require('passport-local').Strategy;\n// var GoogleTokenStrategy =  require('passport-google-oauth20').Strategy;\n// var FacebookTokenStrategy =  require('passport-facebook-token');\n\n\nimport config from './config';\nimport routes from './routes';\n\nlet app = express();\napp.server = http.createServer(app);\n\n//middleware\n//parse application/json\napp.use(bodyParser.json({\n  limit: config.bodyLimit\n}));\n\n//local passport config\napp.use(passport.initialize());\nlet Account = require('./model/account');\npassport.use(new LocalStrategy({\n  usernameField: 'email',\n  passwordField: 'password'\n},\n  Account.authenticate()\n));\n\n\npassport.serializeUser(Account.serializeUser());\npassport.deserializeUser(Account.deserializeUser());\n\n//api routes v1\napp.use('/v1', routes);\n\n// Base URL test endpoint to see if API is running\napp.get('/', (req, res) => {\n  res.json({ message: 'Triumph API is ALIVE!' })\n});\n\napp.server.listen(config.port);\nconsole.log(`Started on port ${app.server.address().port}`);\n\nmodule.exports = {\n  app\n}\n"]}