{"version":3,"sources":["../src/db.js"],"names":["module","exports","connectToServer","db","mongoose","connect","config","mongoUrl","useMongoClient","err","database","console","log","process","exit","callback"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEAA,OAAOC,OAAP,GAAiB;AACfC,mBAAiB,mCAAY;AAC3B,QAAIC,EAAJ;AACA;AACAC,uBAASC,OAAT,CAAiBC,iBAAOC,QAAxB,EAAkC,EAAEC,gBAAgB,IAAlB,EAAlC,EAA2D,UAAUC,GAAV,EAAeC,QAAf,EAAyB;AAClF,UAAID,GAAJ,EAAS;AACPE,gBAAQC,GAAR,CAAYH,GAAZ;AACAI,gBAAQC,IAAR,CAAa,CAAb;AACD;AACDH,cAAQC,GAAR,CAAYN,iBAAOC,QAAnB;AACA;AACAJ,WAAKO,QAAL;AACAC,cAAQC,GAAR,CAAY,2BAAZ;AACAG,eAASZ,EAAT;AACA,aAAOA,EAAP;AACD,KAXD;AAYD;AAhBc,CAAjB","file":"db.js","sourcesContent":["import mongoose from 'mongoose';\nimport mongodb from 'mongodb';\nimport config from './config';\n\nmodule.exports = {\n  connectToServer: callback => {\n    var db;\n    // Connect to the database before starting the application server.\n    mongoose.connect(config.mongoUrl, { useMongoClient: true}, function (err, database) {\n      if (err) {\n        console.log(err);\n        process.exit(1);\n      }\n      console.log(config.mongoUrl);\n      // Save database object from the callback for reuse.\n      db = database;\n      console.log(\"Database connection ready\");\n      callback(db);\n      return db\n    });\n  }\n}\n"]}